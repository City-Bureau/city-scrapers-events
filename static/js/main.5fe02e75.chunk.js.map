{"version":3,"sources":["logo.png","config.js","Event.js","App.js","hooks.js","index.js"],"names":["module","exports","currentYear","Date","getFullYear","config","EVENT_SOURCE","REGION_OPTIONS","label","value","MONTH_OPTIONS","YEAR_OPTIONS","map","y","gCalLink","agency","name","start","end","location","sources","eventName","encodeURIComponent","dateString","format","length","url","Event","event","selected","style","className","href","target","rel","localizer","momentLocalizer","moment","App","useState","CellMeasurerCache","fixedWidth","minHeight","cache","loading","setLoading","allEvents","setAllEvents","agencies","setAgencies","setSelected","region","month","year","filters","setFilters","searchValue","setSearchValue","debouncedSearchValue","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","events","useMemo","search","filter","extra","extras","includes","split","evtAgency","get","trim","searchVal","toLowerCase","description","join","applyFilters","selectedIndex","findIndex","clearCache","clearAll","window","addEventListener","fetch","then","res","text","l","JSON","parse","tz","start_time","timezone","end_time","sort","a","b","toDate","results","Set","removeEventListener","rowRenderer","index","key","parent","columnIndex","rowIndex","loader","src","logo","alt","type","placeholder","onChange","evt","closeMenuOnSelect","isClearable","isMulti","options","months","closeOnSelect","years","height","width","rowCount","deferredMeasurementCache","rowHeight","scrollToAlignment","scrollToIndex","startAccessor","endAccessor","titleAccessor","defaultDate","selectable","onSelectEvent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5fe02e75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0d6bbdaf.png\";","const currentYear = new Date().getFullYear()\nconst years = [currentYear, currentYear + 1]\n\nconst config = {\n  EVENT_SOURCE:\n    \"https://cityscrapers.blob.core.windows.net/meetings-feed/upcoming.json\",\n  REGION_OPTIONS: [\n    { label: \"Chicago\", value: \"chi\" },\n    { label: \"Cook County\", value: \"cook\" },\n    { label: \"Illinois\", value: \"il\" },\n  ],\n  MONTH_OPTIONS: [\n    { label: \"January\", value: 0 },\n    { label: \"February\", value: 1 },\n    { label: \"March\", value: 2 },\n    { label: \"April\", value: 3 },\n    { label: \"May\", value: 4 },\n    { label: \"June\", value: 5 },\n    { label: \"July\", value: 6 },\n    { label: \"August\", value: 7 },\n    { label: \"September\", value: 8 },\n    { label: \"October\", value: 9 },\n    { label: \"November\", value: 10 },\n    { label: \"December\", value: 11 },\n  ],\n  YEAR_OPTIONS: years.map((y) => {\n    return { label: y, value: y }\n  }),\n}\n\nexport default config\n","import React from \"react\"\nimport \"./Event.css\"\n\nconst gCalLink = ({ agency, name, start, end, location, sources }) => {\n  const eventName = encodeURIComponent(`${agency} - ${name}`)\n  const dateString = encodeURIComponent(\n    `${start.format(\"YYYYMMDD\")}T${start.format(\"HHmmss\")}/${end.format(\n      \"YYYYMMDD\"\n    )}T${end.format(\"HHmmss\")}`\n  )\n  return `https://www.google.com/calendar/event?action=TEMPLATE&dates=${dateString}&text=${eventName}${\n    location.name ? `&location=${encodeURIComponent(location.name)}` : ``\n  }${\n    sources.length > 0 ? `&details=${encodeURIComponent(sources[0].url)}` : ``\n  }`\n}\n\nconst Event = ({ event, selected, style }) => (\n  <div className={`Event ${selected ? `selected` : ``}`} style={style}>\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <h4 className=\"title is-4\">{event.agency}</h4>\n        <h5 className=\"subtitle\">{event.name}</h5>\n        <p className=\"date\">\n          {event.start.format(\"dddd, MMMM Do, YYYY\")}\n          <br />\n          {event.start.format(\"h:mma\")}\n        </p>\n        <p className=\"location\">\n          <span className=\"tag is-white\">Location</span> {event.location.name}\n        </p>\n      </div>\n      <footer className=\"card-footer\">\n        {event.sources.length > 0 ? (\n          <p className=\"card-footer-item\">\n            <a\n              href={event.sources[0].url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              View On Agency Site\n            </a>\n          </p>\n        ) : (\n          ``\n        )}\n        <p className=\"card-footer-item\">\n          <a href={gCalLink(event)} target=\"_blank\" rel=\"noopener noreferrer\">\n            Add to Google Calendar\n          </a>\n        </p>\n      </footer>\n    </div>\n  </div>\n)\n\nexport default Event\n","import React, { useState, useEffect, useMemo } from \"react\"\nimport moment from \"moment-timezone\"\nimport { Calendar, momentLocalizer } from \"react-big-calendar\"\nimport Select from \"react-select\"\nimport {\n  AutoSizer,\n  List,\n  CellMeasurer,\n  CellMeasurerCache,\n} from \"react-virtualized\"\n\nimport \"bulma/css/bulma.css\"\nimport \"react-big-calendar/lib/css/react-big-calendar.css\"\nimport \"react-virtualized/styles.css\"\nimport \"./App.css\"\nimport logo from \"./logo.png\"\n\nimport config from \"./config\"\nimport Event from \"./Event\"\nimport { useDebounce } from \"./hooks\"\n\nconst localizer = momentLocalizer(moment)\n\nconst applyFilters = ({ allEvents, region, agency, month, year, search }) => {\n  let events = allEvents\n  if (region.length) {\n    events = events.filter(({ extra, extras }) =>\n      region.includes((extra || extras)[\"cityscrapers.org/id\"].split(\"_\")[0])\n    )\n  }\n  if (agency.length) {\n    events = events.filter(({ agency: evtAgency }) =>\n      agency.includes(evtAgency)\n    )\n  }\n  if (month.length) {\n    events = events.filter(({ start }) => month.includes(start.get(\"month\")))\n  }\n  if (year.length) {\n    events = events.filter(({ start }) => year.includes(start.get(\"year\")))\n  }\n  if (search.trim()) {\n    const searchVal = search.trim().toLowerCase()\n    events = events.filter(({ agency, name, description }) =>\n      [agency, name, description].join(\" \").toLowerCase().includes(searchVal)\n    )\n  }\n  return events\n}\n\n// Fetch and parse newline-delimited JSON of events\nconst loadEvents = () =>\n  fetch(config.EVENT_SOURCE)\n    .then((res) => res.text())\n    .then((text) =>\n      text\n        .split(\"\\n\")\n        .filter((l) => l.trim())\n        .map(JSON.parse)\n        .map((event) => ({\n          ...event,\n          agency: (event.extras || event.extra)[\"cityscrapers.org/agency\"],\n          start: moment.tz(event.start_time, event.timezone),\n          end: moment.tz(event.end_time, event.timezone),\n        }))\n        .sort((a, b) => a.start.toDate() - b.start.toDate())\n    )\n\nconst App = () => {\n  // eslint-disable-next-line no-unused-vars\n  const [cache, setCache] = useState(\n    new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: 200,\n    })\n  )\n  const [loading, setLoading] = useState(true)\n  const [allEvents, setAllEvents] = useState([])\n  const [agencies, setAgencies] = useState([])\n  const [selected, setSelected] = useState(null)\n  const [filters, setFilters] = useState({\n    region: [],\n    agency: [],\n    month: [],\n    year: [],\n  })\n  const [searchValue, setSearchValue] = useState(``)\n  const debouncedSearchValue = useDebounce(searchValue, 500)\n\n  const events = useMemo(\n    () => applyFilters({ allEvents, ...filters, search: debouncedSearchValue }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      allEvents,\n      filters.region,\n      filters.agency,\n      filters.month,\n      filters.year,\n      debouncedSearchValue,\n    ]\n  )\n  const selectedIndex = useMemo(\n    () =>\n      events.findIndex(\n        ({ extra, extras }) =>\n          (extra || extras)[\"cityscrapers.org/id\"] === selected\n      ),\n    [events, selected]\n  )\n\n  useEffect(() => {\n    const clearCache = () => cache.clearAll()\n    window.addEventListener(\"resize\", clearCache)\n\n    loadEvents().then((results) => {\n      setAllEvents(results)\n      setAgencies(\n        [...new Set(results.map(({ agency }) => agency))].map((agency) => ({\n          label: agency,\n          value: agency,\n        }))\n      )\n      setLoading(false)\n    })\n\n    return () => {\n      window.removeEventListener(\"resize\", clearCache)\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  useEffect(() => {\n    if (selected) {\n      setTimeout(() => setSelected(null), 1000)\n    }\n  }, [selected])\n\n  const rowRenderer = ({ index, key, parent, style }) => {\n    const event = events[index]\n\n    return (\n      <CellMeasurer\n        cache={cache}\n        columnIndex={0}\n        key={key}\n        rowIndex={index}\n        parent={parent}\n      >\n        {() => (\n          <Event\n            event={event}\n            selected={index === selectedIndex}\n            style={style}\n          ></Event>\n        )}\n      </CellMeasurer>\n    )\n  }\n\n  const loader = loading ? (\n    <div className=\"lds-ring\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  ) : (\n    \"\"\n  )\n\n  return (\n    <section className=\"hero is-fullheight\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <header className=\"App-header\">\n            <img src={logo} alt=\"City Bureau logo\" />\n            <h1 className=\"title\">City Scrapers Events</h1>\n            <a href={config.EVENT_SOURCE} className=\"is-pulled-right\">\n              Download Source Data\n            </a>\n          </header>\n          <div className=\"columns\">\n            <div className=\"events-panel column is-one-half\">\n              <div className=\"events-panel-container\">\n                <div className=\"controls columns is-gapless is-multiline is-mobile\">\n                  <div className=\"column is-one-half\">\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Search names and descriptions\"\n                      onChange={\n                        (evt) => setSearchValue(evt.target.value)\n                        // setFilters({ ...filters, search: evt.target.value })\n                      }\n                    />\n                  </div>\n                  <div className=\"column is-one-half\">\n                    <Select\n                      closeMenuOnSelect={false}\n                      isClearable\n                      isMulti\n                      onChange={(region) =>\n                        setFilters({\n                          ...filters,\n                          region: (region || []).map(({ value }) => value),\n                        })\n                      }\n                      placeholder=\"Select regions\"\n                      options={config.REGION_OPTIONS}\n                      value={config.REGION_OPTIONS.filter(({ value }) =>\n                        filters.region.includes(value)\n                      )}\n                    />\n                  </div>\n                  <div className=\"column is-full\">\n                    <Select\n                      closeMenuOnSelect={false}\n                      isClearable\n                      isMulti\n                      onChange={(agency) =>\n                        setFilters({\n                          ...filters,\n                          agency: (agency || []).map(({ value }) => value),\n                        })\n                      }\n                      placeholder=\"Select agencies\"\n                      options={agencies}\n                      value={agencies.filter(({ value }) =>\n                        filters.agency.includes(value)\n                      )}\n                    />\n                  </div>\n                  <div className=\"column is-one-half\">\n                    <Select\n                      closeMenuOnSelect={false}\n                      isClearable\n                      isMulti\n                      onChange={(months) =>\n                        setFilters({\n                          ...filters,\n                          month: (months || []).map(({ value }) => value),\n                        })\n                      }\n                      placeholder=\"Select month(s)\"\n                      options={config.MONTH_OPTIONS}\n                      value={config.MONTH_OPTIONS.filter(({ value }) =>\n                        filters.month.includes(value)\n                      )}\n                    />\n                  </div>\n                  <div className=\"column is-one-half\">\n                    <Select\n                      closeOnSelect={false}\n                      isClearable\n                      isMulti\n                      onChange={(years) =>\n                        setFilters({\n                          ...filters,\n                          year: (years || []).map(({ value }) => value),\n                        })\n                      }\n                      placeholder=\"Select year(s)\"\n                      options={config.YEAR_OPTIONS}\n                      value={config.YEAR_OPTIONS.filter(({ value }) =>\n                        filters.year.includes(value)\n                      )}\n                    />\n                  </div>\n                </div>\n                <div className=\"events-scroll-panel\">\n                  {loader}\n                  <AutoSizer>\n                    {({ height, width }) => (\n                      <List\n                        width={width}\n                        height={height}\n                        rowCount={events.length}\n                        deferredMeasurementCache={cache}\n                        rowHeight={cache.rowHeight}\n                        rowRenderer={rowRenderer}\n                        scrollToAlignment=\"start\"\n                        scrollToIndex={selectedIndex}\n                      />\n                    )}\n                  </AutoSizer>\n                </div>\n              </div>\n            </div>\n            <div className=\"calendar column is-one-half is-hidden-touch\">\n              <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor={({ start }) => start.toDate()}\n                endAccessor={({ end }) => end.toDate()}\n                titleAccessor=\"name\"\n                defaultDate={new Date()}\n                selectable\n                onSelectEvent={({ extra, extras }) =>\n                  setSelected((extra || extras)[\"cityscrapers.org/id\"])\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default App\n","import { useEffect, useState } from \"react\"\n\n// https://usehooks.com/page/2\nexport function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}